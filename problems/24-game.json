{
  "language": "java",
  "code": "class Solution {\n    public boolean judgePoint24(int[] cards) {\n        return calcular(Arrays.stream(cards).mapToDouble(v -> v).boxed().toList());\n    }\n    private boolean calcular(final List<Double> nums) {\n        if(nums.size() == 1) {\n            return Math.abs(nums.get(0) - 24.0) <= 0.1;\n        }\n        for(int i = 0; i < nums.size(); i++) {\n            for(int j = i + 1; j < nums.size(); j++) {\n                final List<Double> restantes = new ArrayList<>();\n                for(int r = 0; r < nums.size(); r++) {\n                    if(r == i || r == j) {\n                        continue;\n                    }\n                    restantes.add(nums.get(r));\n                }\n                for(final var operacion : computarOperaciones(nums.get(i), nums.get(j))) {\n                    restantes.add(operacion);\n                    if(calcular(restantes)) {\n                        return true;\n                    }\n                    restantes.remove(restantes.size() - 1);\n                }\n            }\n        }\n        return false;\n    }\n    private List<Double> computarOperaciones(final double a, final double b) {\n        final List<Double> computos = new ArrayList<>();\n        computos.add(a + b);\n        computos.add(a * b);\n        computos.add(a - b);\n        computos.add(b - a);\n        if(b != 0.0) {\n            computos.add(a / b);\n        }\n        if(a != 0.0) {\n            computos.add(b / a);\n        }\n        return computos;\n    }\n}"
}