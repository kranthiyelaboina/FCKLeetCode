{
  "problemName": "reordered-power-of-2",
  "language": "java",
  "code": "class Solution {\n    public boolean reorderedPowerOf2(int n) {\n        long count = countDigits(n);\n        for (int i = 0; i < 64; i++) {\n            if (countDigits((long) Math.pow(2, i)) == count) {\n                return true;\n            }\n        }\n        return false;\n    }\n    private long countDigits(long n) {\n        long count = 0;\n        String s = String.valueOf(n);\n        int[] digits = new int[10];\n        for (char c : s.toCharArray()) {\n            digits[c - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            count = count * 10 + digits[i];\n        }\n        return count;\n    }\n}",
  "generatedBy": "gemini-ai",
  "timestamp": "2025-08-10T01:05:03.134Z"
}